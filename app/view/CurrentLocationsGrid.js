/*
 * File: app/view/CurrentLocationsGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LiveUpdates.view.CurrentLocationsGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.currentlocationsgridpanel',

    requires: [
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Text',
        'Ext.button.Button'
    ],

    border: 1,
    width: 220,
    bodyBorder: false,
    hideHeaders: true,
    store: 'LastReportedEvent',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var journeyStatusCls=(record.data.InJourney ? 'inJourney': 'outJourney'),
                            rowBody = '<div class="lastreportedeventrow"><b>'+record.get("EventDTDisplay")+'</b> - '+record.get("Location")+'</div>';

                        //return '<img src="http://images.pinpointers.com/PP3/'+icon+'.png"/>' + record.get('UnitName') + rowBody;
                        return '<div class = "unitname-header"><span class="journeystatusicon '+journeyStatusCls+'"></span></div><span class="unitname">' + record.get('UnitName') + '</span>' + rowBody;
                    },
                    dataIndex: 'UnitName',
                    flex: 1
                }
            ],
            viewConfig: {
                loadMask: false
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'textfield',
                            width: 180,
                            hideEmptyLabel: false,
                            hideLabel: true,
                            emptyText: 'Search Fleet'
                        },
                        {
                            xtype: 'button',
                            text: 'X'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});